<!DOCTYPE html>
<%- include('partials/head.ejs') %>
<html>
<head>
  <title>Mentorat</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-[#FAF3E5]">
    <%- include('partials/header.ejs') %>

  <main class="flex flex-col items-center p-4 pt-20">

    <div id="alertBox" class="fixed bottom-6 left-1/2 transform -translate-x-1/2 bg-white border px-6 py-3 rounded-xl shadow-lg hidden z-50 max-w-md text-center">
      <span id="alertText" class="text-sm font-medium"></span>
    </div>

    <div id="ongletsRole" class="relative flex rounded-full bg-gray-200 p-1 w-fit mt-10">
   <!-- Slider de fond -->
    <div id="slider" class="absolute left-0 top-0 h-full w-1/2 bg-[#5C83BA] rounded-full transition-all duration-300 ease-in-out z-0"></div>

      <button id="tab-eleve" class="relative z-10 px-4 py-1 text-white rounded-l-full focus:outline-none w-24">√âl√®ve</button>
      <button id="tab-enseignant" class="relative z-10 px-4 py-1 text-black rounded-r-full focus:outline-none w-24">Tuteur</button>
    </div>

      <!-- Contenus -->
    <div id="contenu-eleve" class="w-full text-center mt-10">
      <!-- Filtres par module (checkbox) -->
      <div id="filtreModules" class="flex flex-wrap justify-center gap-4 my-6">
        <label class="flex items-center gap-2 cursor-pointer">
          <input type="checkbox" class="filter-checkbox hidden peer">
          <span class="peer-checked:bg-blue-400 peer-checked:text-white bg-blue-200 text-black px-4 py-2 rounded-full font-semibold transition">
            Maths
          </span>
        </label>

        <label class="flex items-center gap-2 cursor-pointer">
          <input type="checkbox" class="filter-checkbox hidden peer">
          <span class="peer-checked:bg-blue-400 peer-checked:text-white bg-blue-200 text-black px-4 py-2 rounded-full font-semibold transition">
            Physique
          </span>
        </label>

        <label class="flex items-center gap-2 cursor-pointer">
          <input type="checkbox" class="filter-checkbox hidden peer">
          <span class="peer-checked:bg-blue-400 peer-checked:text-white bg-blue-200 text-black px-4 py-2 rounded-full font-semibold transition">
            Informatique
          </span>
        </label>

        <label class="flex items-center gap-2 cursor-pointer">
          <input type="checkbox" class="filter-checkbox hidden peer">
          <span class="peer-checked:bg-blue-400 peer-checked:text-white bg-blue-200 text-black px-4 py-2 rounded-full font-semibold transition">
            Communication
          </span>
        </label>
      </div>

      <div id="connexionInvite" class="hidden my-8">
        <a href="/connexion" class="bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition">
          Se connecter pour acc√©der aux cours
        </a>
      </div>
      
      <div id="mentorats-container" class="grid grid-cols-1 md:grid-cols-3 gap-4 p-4"></div>
    </div>




    <!-- Section confirmation (initialement cach√©e) -->
    <div id="confirmationPage" class="hidden flex flex-col items-center p-4 gap-4">
      <div class="bg-blue-200 rounded-xl p-4 w-full max-w-xs text-center">
        <div class="text-2xl mb-2">üïí</div>
        <p id="confirmationText" class="text-lg font-semibold mb-4"></p>
        <div class="flex justify-center gap-4">
          <button id="btnOui" class="bg-green-400 text-white px-4 py-1 rounded-full hover:bg-green-500">Oui</button>
          <button id="btnNon" class="bg-red-400 text-white px-4 py-1 rounded-full hover:bg-red-500">Non</button>
        </div>
      </div>
    </div>

    <div id="contenu-enseignant" class="w-full text-center hidden mt-10">
      <div id="homePage">
        <button id="btnAfficherCours" class="bg-blue-300 rounded-full px-6 py-2 font-semibold hover:bg-blue-400 transition">Voir mes cours existants</button>
        <button id="btnCreerCours" class="bg-blue-300 rounded-full px-6 py-2 font-semibold hover:bg-blue-400 transition">Cr√©er un nouveau cours</button>
      </div>
    </div>

    <div id="formulairePage" class="hidden w-full max-w-md bg-white p-6 rounded-xl shadow-lg mt-10">
      
      <form id="formCours" class="space-y-4" method="POST">
        <div>
          <label class="block font-semibold mb-1">Mati√®re :</label>
          <input type="text" name="matiere" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-300" placeholder="Ex: Transformation Int√©grale">
        </div>

        <div>
          <label class="block font-semibold mb-1">Dur√©e :</label>
          <input type="time" name="duree" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-300">
        </div>

        <div>
          <label class="block font-semibold mb-1">Heure de d√©but :</label>
          <select name="heure_debut" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-300">
            <% for (let h = 7; h <= 20; h++) { %>
              <option value="<%= h %>:00"><%= h %>h</option>
            <% } %>
          </select>
        </div>

        <div>
          <label class="block font-semibold mb-1">Date du cours :</label>
          <input type="date" name="date" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-300" required>
        </div>

        <div>
          <label class="block font-semibold mb-1">Module :</label>
          <select name="module" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-300">
            <option>Maths</option>
            <option>Physique</option>
            <option>Informatique</option>
            <option>Communication</option>
          </select>
        </div>

        <div>
          <label class="block font-semibold mb-1">Message (optionnel)</label>
          <textarea name="message" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-300" placeholder="Ton message..."></textarea>
        </div>

        <button type="submit" class="w-full bg-blue-400 text-white font-semibold py-2 rounded-lg hover:bg-blue-600 transition">
          Enregistrer
        </button>
      </form>
    </div>

  <div id="coursPage" class="hidden flex flex-col items-center p-4 gap-4">

    <p class="font-bold text-lg mt-4">Mes cours disponibles :</p>

    <div id="coursContainer" class="grid grid-cols-1 md:grid-cols-3 gap-4 w-full max-w-4xl">
    </div>
  </div>


</main>




  <%- include("partials/footer.ejs") %>
  <script>
    let mentoratsTous = [];
    const currentUserId = "<%= userId %>";
    const estConnecte = Boolean(currentUserId);


    document.addEventListener('DOMContentLoaded', () => {
      if (!estConnecte) {
        // Cacher les onglets, filtres, et afficher bouton connexion
        document.getElementById('ongletsRole')?.classList.add('hidden');
        document.getElementById('filtreModules')?.classList.add('hidden');
        document.getElementById('connexionInvite')?.classList.remove('hidden');
      } else {
        chargerMentorats();
      }
    });


    document.querySelectorAll('.filter-checkbox').forEach(cb => {
      cb.addEventListener('change', () => {
        afficherMentoratsFiltres();
      });
    });


    const tabEleve = document.getElementById('tab-eleve');
    const tabEnseignant = document.getElementById('tab-enseignant');
    const slider = document.getElementById('slider');
    const contenuEleve = document.getElementById('contenu-eleve');
    const contenuEnseignant = document.getElementById('contenu-enseignant');

    tabEleve.addEventListener('click', () => {
      slider.style.left = '0%';
      tabEleve.classList.replace('text-black', 'text-white');
      tabEnseignant.classList.replace('text-white', 'text-black');
      contenuEleve.classList.remove('hidden');
      contenuEnseignant.classList.add('hidden');
      document.getElementById('confirmationPage').classList.add('hidden');
      coursPage.classList.add('hidden');
      formulairePage.classList.add('hidden');
      chargerMentorats();
    });

    tabEnseignant.addEventListener('click', () => {
      slider.style.left = '50%';
      tabEnseignant.classList.replace('text-black', 'text-white');
      tabEleve.classList.replace('text-white', 'text-black');
      contenuEleve.classList.add('hidden');
      contenuEnseignant.classList.remove('hidden');
      document.getElementById('confirmationPage').classList.add('hidden');
      coursPage.classList.add('hidden');
      formulairePage.classList.add('hidden');
    });

    function showAlert(message, type = "error") {
      const box = document.getElementById('alertBox');
      const text = document.getElementById('alertText');

      text.textContent = message;

      // Reset classes
      box.className = "fixed bottom-6 left-1/2 transform -translate-x-1/2 px-6 py-3 rounded-xl shadow-lg z-50 max-w-md text-center";

      if (type === "error") {
        box.classList.add("bg-red-100", "border-red-300", "text-red-700");
      } else if (type === "success") {
        box.classList.add("bg-green-100", "border-green-300", "text-green-700");
      } else if (type === "info") {
        box.classList.add("bg-blue-100", "border-blue-300", "text-blue-700");
      }

      box.classList.remove("hidden");

      setTimeout(() => {
        box.classList.add("hidden");
      }, 4000);
    }

   function addMentorat(matiere, titre, intervenant, duree, heure_debut = null, heure_fin = null, id = null, date = null, enseignant_id = null, estAuteur = false, estReserve = false) {
      const container = document.getElementById('mentorats-container');
      const card = document.createElement('div');

      // Couleur selon le statut
      const bgColor = estAuteur
        ? "#79f17b"
        : estReserve
          ? "#f9dc71"
          : "#bfdbfe";

      card.className = "rounded-2xl p-4 flex flex-col items-center text-center shadow-md";
      card.style.backgroundColor = bgColor;
      card.dataset.id = id;

      card.innerHTML = `
        <div class="text-3xl mb-2">üë§</div>
        <h3 class="text-lg font-semibold mb-3">${titre}</h3>
        <ul class="text-sm mb-5">
          <li>Pr√©sent√© par : ${intervenant}</li>
          <li>Dur√©e : ${duree}</li>
          ${heure_debut && heure_fin ? `<li>Cr√©neau : ${heure_debut} - ${heure_fin}</li>` : ''}
          <li>Date : ${new Date(date).toLocaleDateString('fr-FR')}</li>
        </ul>
        <button class="bg-white text-sm font-medium border border-gray-400 px-3 py-1 rounded-full hover:bg-gray-100 transition">
          R√©server un cr√©neau
        </button>
      `;


      const boutonReserver = card.querySelector('button');

      if (estAuteur) {
        boutonReserver.disabled = true;
        boutonReserver.textContent = "C'est ton cours";
        boutonReserver.classList.add("opacity-50", "cursor-not-allowed");
      } else if (estReserve) {
        boutonReserver.disabled = true;
        boutonReserver.textContent = "D√©j√† r√©serv√©";
        boutonReserver.classList.add("opacity-50", "cursor-not-allowed");
      } else {
        boutonReserver.addEventListener('click', () => {
          mentoratActif = card;
          creneauSelectionne = "horaire √† d√©finir";
          document.getElementById('confirmationText').textContent = `Voulez-vous r√©server ce mentorat ?`;
          document.getElementById('contenu-eleve').classList.add('hidden');
          document.getElementById('confirmationPage').classList.remove('hidden');
        });
      }

      container.appendChild(card);
    }
    // R√©f√©rences des pages
    const homePage = document.getElementById('homePage');
    const formulairePage = document.getElementById('formulairePage');
    const coursPage = document.getElementById('coursPage');

    // Boutons
    const btnAfficherCours = document.getElementById('btnAfficherCours');
    const btnCreerCours = document.getElementById('btnCreerCours');

    btnCreerCours.addEventListener('click', () => {
      formulairePage.classList.remove('hidden');
      coursPage.classList.add('hidden'); // Masquer les cours
    });


   
    const coursContainer = document.getElementById('coursContainer');

    function addMentoratEnseignant(titre, duree, module = '', message = '', id = '', heure_debut = '', heure_fin = '', date = '', intervenant = '') {
      const card = document.createElement('div');
      card.className = "bg-blue-200 rounded-2xl p-4 text-center shadow-md";

      card.innerHTML = `
        <div class="text-3xl mb-2">üë§</div>
        <h3 class="text-lg font-semibold mb-3">${titre}</h3>
        <ul class="text-sm mb-5">
          <li>Module : ${module}</li>
          <li>Pr√©sent√© par : ${intervenant}</li>
          <li>Dur√©e : ${duree}</li>
          ${heure_debut && heure_fin ? `<li>Cr√©neau : ${heure_debut} - ${heure_fin}</li>` : ''}
          <li>Date : ${new Date(date).toLocaleDateString('fr-FR')}</li>
          ${message ? `<li>Message : ${message}</li>` : ''}
        </ul>
        <button class="btn-supprimer bg-red-400 text-white text-sm font-medium px-3 py-1 rounded-full hover:bg-red-500 transition">
          Supprimer
        </button>
      `;

      const btnSupprimer = card.querySelector('.btn-supprimer');
      btnSupprimer.addEventListener('click', () => supprimerCours(id, card));

      coursContainer.appendChild(card);
    }

    let creneauSelectionne = null;
    let mentoratActif = null;

    function afficherConfirmation(creneau) {
      creneauSelectionne = creneau;
      document.getElementById('confirmationText').textContent = `Voulez-vous r√©server le cr√©neau : ${creneau} ?`;
      document.getElementById('confirmationPage').classList.remove('hidden');
    }

    const btnOui = document.getElementById('btnOui');
    const btnNon = document.getElementById('btnNon');    


    btnOui.addEventListener('click', async () => {
      if (mentoratActif) {
        const coursId = mentoratActif.dataset.id;

        try {
          const response = await fetch(`/mentorat/reserver/${coursId}`, {
            method: 'PATCH'
          });

          const result = await response.json();
          console.log("R√©ponse serveur :", result);

          if (result.success) {
            mentoratActif.style.backgroundColor = '#f9dc71';
            const bouton = mentoratActif.querySelector('button');
            bouton.disabled = true;
            bouton.textContent = 'D√©j√† r√©serv√©';
            bouton.classList.add('opacity-50', 'cursor-not-allowed');
            showAlert("R√©servation effectu√©e !", "success");
          } else {
            showAlert(result.error || "Erreur lors de la r√©servation", "error");
          }
        } catch (err) {
          console.error(err);
          showAlert("Erreur lors de la r√©servation", "error");
        }

        
        mentoratActif = null;
      }

      document.getElementById('confirmationPage').classList.add('hidden');
      document.getElementById('contenu-eleve').classList.remove('hidden');
    });



    btnNon.addEventListener('click', () => {
      // Revenir √† la liste des cr√©neaux
      document.getElementById('confirmationPage').classList.add('hidden');
      document.getElementById('contenu-eleve').classList.remove('hidden');
    });
   

    document.getElementById('formCours').addEventListener('submit', async (e) => {
      e.preventDefault();

      const form = e.target;
      const data = {
        matiere: form.matiere.value,
        duree: form.duree.value,
        module: form.module.value,
        message: form.message.value,
        heure_debut: form.heure_debut.value,
        date: form.date.value
      };

      const res = await fetch('/mentorat/creer', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });

      const result = await res.json();
      if (result.success) {
        showAlert('Cours enregistr√© avec succ√®s', 'success');
      } else {
        showAlert(result.error || 'Erreur lors de la cr√©ation', 'error');
      }
    });


    async function chargerCours() {
      const res = await fetch('/mentorat/mes-cours');
      const result = await res.json();

      if (result.success) {
        coursContainer.innerHTML = '';
        result.cours.forEach(c => {
          const intervenant = `${c.enseignant_prenom || ''} ${c.enseignant_nom || ''}`.trim();
          addMentoratEnseignant(c.matiere, c.duree, c.module, c.message, c._id, c.heure_debut, c.heure_fin, c.date, intervenant);
        });

      } else {
        showAlert('Erreur lors du chargement des cours');
      }
    }

    // Quand on clique sur "Voir mes cours existants"
    btnAfficherCours.addEventListener('click', async () => {
      coursPage.classList.remove('hidden');
      formulairePage.classList.add('hidden');
      await chargerCours();
    });

    async function supprimerCours(id, element) {
      if (!confirm("Confirmer la suppression de ce cours ?")) return;

      const res = await fetch(`/mentorat/supprimer/${id}`, {
        method: 'DELETE'
      });

      const result = await res.json();
      if (result.success) {
        element.remove();
      } else {
        showAlert(result.error || "√âchec de la suppression.");
      }
    }

    async function chargerMentorats() {
      const res = await fetch('/mentorat/liste');
      const result = await res.json();
      


      if (result.success) {
        mentoratsTous = result.cours; // stocke tous les cours
        afficherMentoratsFiltres();   // affiche selon les filtres actifs
        const container = document.getElementById('mentorats-container');
        container.innerHTML = '';

        result.cours.forEach(c => {
          const estAuteur = c.enseignant_id === currentUserId;
          const estReserve = c.reserve === true;
          const intervenant = `${c.enseignant_prenom || ''} ${c.enseignant_nom || ''}`.trim();

          addMentorat(
            c.module,
            c.matiere,
            intervenant,
            c.duree,
            c.heure_debut,
            c.heure_fin,
            c._id,
            c.date,
            c.enseignant_id,
            estAuteur,
            estReserve
          );
        });




      } else {
        showAlert('Erreur lors du chargement des cours.');
      }
    }
    function afficherMentoratsFiltres() {
      const container = document.getElementById('mentorats-container');
      container.innerHTML = '';

      // R√©cup√®re les modules coch√©s
      const modulesActifs = Array.from(document.querySelectorAll('.filter-checkbox:checked'))
        .map(input => input.nextElementSibling.textContent.trim());

      // Filtrer les cours
      const mentoratsFiltres = modulesActifs.length === 0
        ? mentoratsTous
        : mentoratsTous.filter(c => modulesActifs.includes(c.module));

      // Afficher les cours filtr√©s
      mentoratsFiltres.forEach(c => {
        const estAuteur = c.enseignant_id === currentUserId;
        const estReserve = c.reserve === true;
        const intervenant = `${c.enseignant_prenom || ''} ${c.enseignant_nom || ''}`.trim();

        addMentorat(
          c.module,
          c.matiere,
          intervenant,
          c.duree,
          c.heure_debut,
          c.heure_fin,
          c._id,
          c.date,
          c.enseignant_id,
          estAuteur,
          estReserve
        );
      });
    }


  </script>

</body>
</html>
